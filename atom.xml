<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Polina Soshnin</title>
    <link>https://polina.io/atom/index.xml</link>
    <description>Recent content on Polina Soshnin</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 22 Dec 2016 22:56:09 +0000</lastBuildDate>
    <atom:link href="https://polina.io/atom/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>thinking about how to think about the job search</title>
      <link>https://polina.io/blog/2016/12/22/second-job-search/</link>
      <pubDate>Thu, 22 Dec 2016 22:56:09 +0000</pubDate>
      
      <guid>https://polina.io/blog/2016/12/22/second-job-search/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been mentoring several folks who are attending bootcamps and making career transitions into tech. A lot of times it feels like there is this attitude that once you get into that bootcamp people think you have passed the point of failure; you have passed a bar where a bootcamp promises you that they will teach you everything you need to know to be successful once you start in the industry. That is the point of a bootcamp after all, but I want to be pragmatic and realistic about this decision you&amp;rsquo;re making. I made the decision when I switched to computer science in college and I made the decision to interview for full stack development jobs and have since braved two job searches. The point of failure you should be considering above all is the pyschology of not getting down on rejections during the job search.&lt;/p&gt;

&lt;p&gt;I believe that the single thing that could cause you to fail in your career transition is if you become demoralized in your job search. It is hard to become resilient to rejection. I know. I&amp;rsquo;ve done two job searches thus far and while I feel slightly less scarred about the process now, I have felt my share of painful, crying for days rejections. It is a very stressful transition to make.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve done a couple things to mitigate this existential risk. The first is to understand that it&amp;rsquo;s not always about something you did or did not do. As you interview, you will want to analyze your outcomes, but the last thing you want to do is internalize what you have experienced so far.&lt;/p&gt;

&lt;p&gt;A big reason why you shouldn&amp;rsquo;t internalize previous experience is you will probably get rejected from a lot of companies that are generally less appealing than the companies you end up getting offers from. If you get rejected by your &amp;ldquo;safety&amp;rdquo; it doesn&amp;rsquo;t mean you won&amp;rsquo;t get into Google. It just means that the company was not in a good position to hire you at that particular time.&lt;/p&gt;

&lt;p&gt;Another way to approach the job search is to understand that jobs are not static things. I have been in a situation where I only got an offer because of the timing in which I applied; there are other times where if I had applied to that company I know I would not have gotten in. And that&amp;rsquo;s because a lot of companies will go in cycles in terms of what their needs are and who they&amp;rsquo;re hiring for. It&amp;rsquo;s definitely not about you as an engineer or a person.&lt;/p&gt;

&lt;p&gt;When you are actively interviewing for several companies, instead of thinking of each one as a target and you have to hit a target on point to get an offer, think of the companies you&amp;rsquo;re interviewing at as a field of easter eggs; every egg either has an offer or it doesn&amp;rsquo;t. Your mission is to crack as many easter eggs as you can. This mission relies on resilience and practice and bravery but ultimately the outcome of your current easter egg doesn&amp;rsquo;t affect the outcome of the next one. The effort and strategy you put into cracking an egg may affect the next one but you cannot compare outcomes.&lt;/p&gt;

&lt;p&gt;This can definitely be exhausting&amp;ndash; and not everyone has the stamina to interview for months at a time. You will have to get used to being outside of your comfort zone and become comfortable being uncomfortable. You have to get used to being scared and being asked to do a hard thing on a whiteboard in a totally pretend scenario. You have to desensitize yourself to it and do as many as you can tolerate so you can crack as many easter eggs as possible. But also try to remember; it&amp;rsquo;s not a race. It&amp;rsquo;s a function of however many easter eggs you&amp;rsquo;d like to crack. You can be strategic on which ones you choose, but do not lose faith if they aren&amp;rsquo;t the ones you thought had offers. The job search is about putting your best foot forward and engaging in the process in good faith.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>asking for referrals</title>
      <link>https://polina.io/blog/2016/12/22/referrals/</link>
      <pubDate>Thu, 22 Dec 2016 21:46:47 +0000</pubDate>
      
      <guid>https://polina.io/blog/2016/12/22/referrals/</guid>
      <description>

&lt;p&gt;I used to be really afraid of referrals. I grew up in a small blue collar town in rural America and did not hear the term &amp;ldquo;networking&amp;rdquo; until I got to college. During my first job search I was especially anxious of making any asks as I didn&amp;rsquo;t feel confident in my skillset and I didn&amp;rsquo;t feel comfortable expecting people who hadn&amp;rsquo;t worked directly with me to help me get a job. I knew that getting referrals would help me as opposed to applying through the front door, but I didn&amp;rsquo;t think I knew enough people. However, I learned that referrals and networking are important and good things and you can be a good person and learn a lot by doing them! Here&amp;rsquo;s what I&amp;rsquo;ve learned about referrals:&lt;/p&gt;

&lt;h2 id=&#34;what-is-the-purpose-of-a-referral&#34;&gt;What is the purpose of a referral?&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;From the perspective of the recruiter: if you come in through a referral, it&amp;rsquo;s easier to sell you on the company and close you.&lt;/li&gt;
&lt;li&gt;From the persective of the employer: it means that someone &amp;ldquo;found&amp;rdquo; you and sold you on a company.&lt;/li&gt;
&lt;li&gt;It means someone likes you and thinks it would be cool if you worked at their company; they think you&amp;rsquo;d be a good culture fit.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;what-referrals-are-not&#34;&gt;What referrals are NOT:&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Not a technical endorsement of your skills&lt;/li&gt;
&lt;li&gt;Not a substitute for the interview process&lt;/li&gt;
&lt;li&gt;Not a guarrantee you&amp;rsquo;ll get an interview&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For some companies a referral may guarrantee you a first round recruiter phone screen or at the very least a recruiter read your resume. But it&amp;rsquo;s not a guarrantee.&lt;/p&gt;

&lt;h2 id=&#34;what-referrals-can-get-you&#34;&gt;What referrals can get you:&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;usually on average a faster response, even if it&amp;rsquo;s negative&lt;/li&gt;
&lt;li&gt;a separate funnel that may be prioritized from other hiring funnels&lt;/li&gt;
&lt;li&gt;recruiters and hiring managers may be more reluctant to dismiss your resume; at least they will consider it&lt;/li&gt;
&lt;li&gt;an opportunity for that initial interview&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;who-can-refer-you&#34;&gt;Who can refer you?&lt;/h2&gt;

&lt;p&gt;The following must both be true:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;(1) anyone who likes you&lt;/li&gt;
&lt;li&gt;(2) anyone who works at a tech company&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It doesn&amp;rsquo;t matter if the person is someone you met at a tech event 6 months ago and they aren&amp;rsquo;t on the engineering team. If you hit it off with them and left a likeable impression and they work at a tech company, they can refer you. Remember that referrals are not a replacement for interviewing or an endorsement of technical aptitude.&lt;/p&gt;

&lt;h2 id=&#34;how-to-find-people-to-ask&#34;&gt;How to find people to ask&lt;/h2&gt;

&lt;p&gt;If you have some contacts but not many: start with FB friends, first degree LinkedIn connections, members of interest groups (Slack/FB/etc), members of your college/bootcamp network, previous coworkers. They can be anyone who has had a generally positive impression of you in the past.&lt;/p&gt;

&lt;p&gt;However, let&amp;rsquo;s consider the worst case scenario: say you literally know zero people. There are a couple of other strategies.&lt;/p&gt;

&lt;p&gt;First strategy: make more friends! Reach out to folks at meetups. In San Francisco, there are so many different kinds of meetups that this doesn&amp;rsquo;t necessarily mean you have to go to tech related events. I would recommend going to events that make you the most likeable version of yourself; some topic you really dig whether it&amp;rsquo;s rock climbing or swing dancing. You&amp;rsquo;re going to find tech folks at the event.&lt;/p&gt;

&lt;p&gt;Another strategy is to make use of friends of friends and second degree connections. This involves a bit more sophistication. I would recommend approaching second degree connections directly&amp;ndash; do not go through the first degree contact. For example, on LinkedIn, if you try to go through the first degree contact you introduce another point of failure. You also cannot control the introduction (your 1st degree contact has to do the work of introducing you and you have no idea what they&amp;rsquo;re going to say). The person will be able see that it&amp;rsquo;s obvious you have a mutual connection if this is through LinkedIn. Additionally you can mention it in your introduction to them. You should also include a call to action. Which leads me to&amp;hellip;&lt;/p&gt;

&lt;h2 id=&#34;how-to-make-the-ask&#34;&gt;How to make the ask&lt;/h2&gt;

&lt;p&gt;For first degree connections:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Use chat instead of email or LinkedIn to keep it casual, but email is okay too.&lt;/li&gt;
&lt;li&gt;Ask first, catch up later. Do not &amp;ldquo;warm them up&amp;rdquo;.&lt;/li&gt;
&lt;li&gt;Make it easy for them to say no.&lt;/li&gt;
&lt;li&gt;Have your resume, social media links, and blurb/cover letter in hand.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If they say yes (they don&amp;rsquo;t have to), you should:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;follow up&lt;/li&gt;
&lt;li&gt;keep them updated on your progress in the interview process&lt;/li&gt;
&lt;li&gt;reach out to them first if you get an offer and do not take it at their company; make sure they hear it from you&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If they agreed to a referral and you don&amp;rsquo;t hear a response from a recruiter, I would wait up to a week before reaching out to them again. If you still don&amp;rsquo;t hear back from the recruiter I would reach back out to your referral and say something along the lines of &amp;ldquo;Hi, just want to let you know that it&amp;rsquo;s been a week and I haven&amp;rsquo;t heard from your recruiter yet. Is that the normal time frame or should I follow up with them?&amp;rdquo;. They might have forgotten to actually submit the referral and this is a good reminder without nagging them! You do not want to assume they didn&amp;rsquo;t submit it.&lt;/p&gt;

&lt;p&gt;If you are reaching out to second degree connections I&amp;rsquo;d recommend the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;In your reach out, introduce yourself as someone interested in learning more about their company.&lt;/li&gt;
&lt;li&gt;Offer to buy them coffee or jump on a quick phone call.&lt;/li&gt;
&lt;li&gt;Do not ask for a referral before chatting.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It&amp;rsquo;s important you do not ask for a referral in your reach out because one of the two requirements of a referral is that they like you, and they have not been given a likeable impression of you yet!&lt;/p&gt;

&lt;p&gt;I also really love asking for informational interviews even when I&amp;rsquo;m not actively interviewing because it lets you do really important information gathering that can be useful down the line. You can also think about what you can help them with; offer your knowledge and experiences so you can learn from each other.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s also an opportunity for you to ask about their experience and ask really good questions. You can impress someone a lot by asking good questions. One way to think about what questions to ask is to think about what your dream company is and what your &amp;ldquo;okay&amp;rdquo; company is. There should be a difference and the questions you ask should help you understand whether the potential referral is working at your dream company.&lt;/p&gt;

&lt;h2 id=&#34;referrals-aren-t-everything&#34;&gt;Referrals aren&amp;rsquo;t everything&lt;/h2&gt;

&lt;p&gt;Everyone has a different policy in their mind and it can be really easy to be nervous to make the ask. Don&amp;rsquo;t, it really doesn&amp;rsquo;t matter if they say no; different people may have different criteria. From the perspective of the person giving the referral they have nothing to lose; if you get the offer they get a referral bonus and another person they like working at their company. If you don&amp;rsquo;t get an offer they lose nothing because it&amp;rsquo;s not their responsibility to interview you.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s really important to consider referrals and be comfortable making those asks and reaching out for informational interviews as part of your career development. The best way to find your dream company and grow in your career is to engage in information gathering and meet other folks with different experiences. Some dream companies might highly stress referrals and may be your only way in the door.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>I am a code janitor but not a firefighter</title>
      <link>https://polina.io/blog/2016/12/17/code-janitor/</link>
      <pubDate>Sat, 17 Dec 2016 19:20:44 +0000</pubDate>
      
      <guid>https://polina.io/blog/2016/12/17/code-janitor/</guid>
      <description>

&lt;p&gt;I like maintaining code. I think it&amp;rsquo;s funner than starting something new. I remember I had a job interview where someone was trying to get a sense for whether I like starting new things or maintaining old things; turns out the job was a prototyping gig so I didn&amp;rsquo;t say the right thing.&lt;/p&gt;

&lt;p&gt;But a lot of people don&amp;rsquo;t like maintaining old code and I think that&amp;rsquo;s because they end up being fire fighters. I&amp;rsquo;ve been there and it sucks. It&amp;rsquo;s demoralizing and the reason I&amp;rsquo;ve left jobs. It can happen when you are a startup selling a b2b product and the clients paying you the most have asks of your software and you need to make them happy so you build the one off thing and no one says no and you end up with a Frakenstein app a year later that no one wants to touch until the amount of queries they&amp;rsquo;re running brings your site up in flames and you need to figure out how to get it running again.&lt;/p&gt;

&lt;p&gt;There are a lot of different kinds of maintenance tasks though and I think it depends on what percentage of the time you are doing each of these various tasks.&lt;/p&gt;

&lt;p&gt;I decided to break down what tasks I have found myself doing on the job (maintenance and additional work) in order of things I really enjoy doing to things I do not enjoy doing:&lt;/p&gt;

&lt;h4 id=&#34;changing-code-based-on-new-requirements-adapting-refactoring&#34;&gt;Changing code based on new requirements (adapting/refactoring)&lt;/h4&gt;

&lt;p&gt;I love making code that is flexible enough to change based on new requirements. It&amp;rsquo;s like making classes that see into the future; you can&amp;rsquo;t predict changing business requirements and asks but you can write code that handles changing constraints gracefully. I love gradual iterations and refactoring code so that the next feature ask makes sense in the current architecture.&lt;/p&gt;

&lt;h4 id=&#34;optimizations-perfecting-user-experience-or-addressing-a-performance-metric&#34;&gt;Optimizations (perfecting user experience or addressing a performance metric)&lt;/h4&gt;

&lt;p&gt;This is an opportunity to hone my craft and focus on having the highest quality contribution. It&amp;rsquo;s also an opportunity for me to try to make the best decision possible given current data and leave that good decision in the code base. These are exciting to do.&lt;/p&gt;

&lt;h4 id=&#34;fixing-bugs-correcting-the-system&#34;&gt;Fixing bugs (correcting the system)&lt;/h4&gt;

&lt;p&gt;I love fixing bugs and it makes me feel like I&amp;rsquo;m making something better and it can be rewarding to find them and learn from them. But it can be demoralizing if you have to do this too often, so I hope I don&amp;rsquo;t have to do it that much.&lt;/p&gt;

&lt;h4 id=&#34;addressing-technical-debt-achitectural-redesign&#34;&gt;Addressing technical debt (achitectural redesign)&lt;/h4&gt;

&lt;p&gt;This is also a really great learning opportunity, but it&amp;rsquo;s sometimes hard for a company to prioritize and it usually means you have more bad decisions in one part of your system than good decisions. This can be tiresome but at the end of the day you can say you made existing code better! I love doing that.&lt;/p&gt;

&lt;h4 id=&#34;feature-work-without-dealing-with-legacy-systems&#34;&gt;Feature work without dealing with legacy systems&lt;/h4&gt;

&lt;p&gt;I am not as excited about this because I always feel that there are parts of our product that could be better than they are, and building new things from scratch makes me feel like we&amp;rsquo;re sacrifying resources that could be making current things better. Though I have to admit this can be fun because it can be a learning opportunity to try a new technology or leave your legacy in the code base with a set of initial code decisions for this particular feature.&lt;/p&gt;

&lt;h4 id=&#34;greenfield-projects-as-proof-of-concept&#34;&gt;Greenfield projects as proof of concept&lt;/h4&gt;

&lt;p&gt;This is akin to pushing out a feature as soon as possible/testing out the market for viability before building something that lasts. I do not like this at all. I can see how this can be fun (growth hacking/engineering is in a similar vein) but building a throw away feature to test viability doesn&amp;rsquo;t do anything for me.&lt;/p&gt;

&lt;h4 id=&#34;doing-chores-writing-one-off-scripts-because-you-haven-t-exposed-a-particular-workflow-to-a-non-technical-team-in-your-company&#34;&gt;Doing chores/writing one off scripts because you haven&amp;rsquo;t exposed a particular workflow to a non-technical team in your company.&lt;/h4&gt;

&lt;p&gt;I don&amp;rsquo;t like doing this but I also can really empathize with client support teams/non-technical teams and I love empowering others with knowledge. So I am okay doing this every once in awhile but if I have to do it often there&amp;rsquo;s a problem.&lt;/p&gt;

&lt;h4 id=&#34;doing-whatever-it-takes-to-just-keep-the-system-working-emergencies&#34;&gt;Doing whatever it takes to just keep the system working (emergencies)&lt;/h4&gt;

&lt;p&gt;I see this as a symptom of a long standing cancer that has affected your code base and you are left with being in perpetual firefight mode instead of iteratively participating in the care and feeding of your app. I love clean code and I love cleaning up code, so I am proud of the title of code janitor in doing the latter. I respect those who can do the former without getting too stressed or risking their quality of life.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Starting with a new employer</title>
      <link>https://polina.io/blog/2016/12/17/new-employer/</link>
      <pubDate>Sat, 17 Dec 2016 18:45:25 +0000</pubDate>
      
      <guid>https://polina.io/blog/2016/12/17/new-employer/</guid>
      <description>

&lt;p&gt;When I start with a new employer, there is a level of anxiety I have because of unknown unknowns; employers can have very different expectations and I don&amp;rsquo;t know what I should be learning. So when I start with a new code base I try to learn their process and what they value first and foremost and I try to keep an open mind. I have also found that I will set expectations for myself very high until I feel comfortable setting them at a level that is appropriate to my employer.&lt;/p&gt;

&lt;h2 id=&#34;taking-early-wins-as-soon-as-you-can&#34;&gt;Taking early wins as soon as you can&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Understand how to get code on your machine and how you can debug it&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Figure out the configurations for different environments (local, staging/qa, production), where things are in source control, how you can test assumptions, where you can query data and access it, where you can look for an internal wiki.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Understand what they standards they uphold&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In order to understand what the expectations are for you, it&amp;rsquo;s good to understand what the expectations for the group are (your expectations as you get onboarded may change from week to week, but generally there is a set that will contribute to success). Some companies value quality, some value deadlines, some value certain people&amp;rsquo;s opinions over others. All of this contributes to your upward mobility at this company.&lt;/p&gt;

&lt;p&gt;One thing I&amp;rsquo;ve learned from working at startups is variance is high for the majority of HR processes: interviewing, onboarding, and managing. I have yet to see consistency in these areas and thus do take all of these with a grain of salt. If my particular onboarding process sucked or if my particular manager is great, that doesn&amp;rsquo;t mean the next person who gets hired at the startup will have a bad onboarding process or good manager. I also realized that during the interview process they may make assumptions of your level and then take that into your onboarding. For example, if they consider you entry level but you have spent 2 years making web apps in your free time,&lt;/p&gt;

&lt;p&gt;For your particular team, absorb what best practices and standards your team values.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Who are your potential mentors?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Who gets things done? Who doesn&amp;rsquo;t? What control do you have over your situation and what does it take to become friends with those who do?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Volunteer for things&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Being proactive and helping your manager out will go a long way.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Your Technical Interviewing Roadmap</title>
      <link>https://polina.io/blog/2016/12/10/interviewing-roadmap/</link>
      <pubDate>Sat, 02 Apr 2016 21:41:31 +0000</pubDate>
      
      <guid>https://polina.io/blog/2016/12/10/interviewing-roadmap/</guid>
      <description>

&lt;p&gt;Let&amp;rsquo;s go over organizing your interview process like a boss.&lt;/p&gt;

&lt;h3 id=&#34;part-one-organization&#34;&gt;Part One: Organization&lt;/h3&gt;

&lt;p&gt;Keep track of your interviews as they navigate through different states. I&amp;rsquo;ve tried using both Asana and Trello, and find Trello to work very well. Based on my experience interviewing, these are the possible states:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Applied&lt;/strong&gt;: Online, Referral, or Career Fair/Hiring Network.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Coding Challenge&lt;/strong&gt;: HackerRank timed toy problem(s), multiple choice, or take home project.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Phone Screen Recruiter&lt;/strong&gt;: Behavioral interview.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Phone Screen Hiring Manager&lt;/strong&gt;: Professional background, trivia web/cs questions, personal projects.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Phone Screen Coding&lt;/strong&gt;: CoderPad shared live coding or verbally explain toy problem algorithm with an engineer.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Onsite&lt;/strong&gt;: Whiteboarding algorithms/systems design, behavioral, live coding/pairing, presenting/extending project.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Offer&lt;/strong&gt;: Compensation, base salary, etc.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Completed&lt;/strong&gt;: no longer in the interviewing process.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Link to &lt;a href=&#34;https://trello.com/b/4eJNcg7E/interviewing-trello-board&#34;&gt;Trello template&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://polina.io/img/articles/trello.jpg&#34; alt=&#34;&#34; style=&#34;width: 100%;max-height: 100%&#34;&gt;&lt;/p&gt;

&lt;p&gt;####How to use:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Number your apps to keep track of how many you&amp;rsquo;ve done. You&amp;rsquo;ll be able to see the last number in your Trello history stream.&lt;/li&gt;
&lt;li&gt;Paste the job title and copy of description of job in the card to be able to reference job description later: I&amp;rsquo;ve found that companies will sometimes take down the job description and then 2 weeks later ask for an interview and at that point I would have forgotten what I had applied to, so document it! It also helps to have it in front of you when you&amp;rsquo;re interviewing.&lt;/li&gt;
&lt;li&gt;Document your entire process with a company in card comments: what went well, what didn&amp;rsquo;t go well, what questions were asked, when did you last ping them, etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;####Google Drive&lt;/p&gt;

&lt;p&gt;In addition to tracking, it&amp;rsquo;s incredibly important that you keep all of your application and interviewing materials organized and up to date. This is what worked for me:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Resume (PDF)&lt;/li&gt;
&lt;li&gt;Resume (Original)&lt;/li&gt;
&lt;li&gt;Resumes

&lt;ul&gt;
&lt;li&gt;Previous Iterations&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Cover Letters

&lt;ul&gt;
&lt;li&gt;Cover Letter Template&lt;/li&gt;
&lt;li&gt;One tailored cover letter per company applied&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Email Templates

&lt;ul&gt;
&lt;li&gt;Scheduling&lt;/li&gt;
&lt;li&gt;Rejection&lt;/li&gt;
&lt;li&gt;Thank Yous&lt;/li&gt;
&lt;li&gt;Negotiation&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Behavioral Phone Screen Worksheet&lt;/li&gt;
&lt;li&gt;Angelist Template&lt;/li&gt;
&lt;li&gt;Apps and Questionnaires (custom applications, ex. essay questions/multiple choice)&lt;/li&gt;
&lt;li&gt;Company List/Notes&lt;/li&gt;
&lt;li&gt;Recruiter Screen Notes&lt;/li&gt;
&lt;li&gt;Personal Project Review&lt;/li&gt;
&lt;li&gt;Additional Phone Screen Notes to help you feel prepared&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;####Github&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Algorithms and toy problem repo&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I found that redoing toy problems and seeing my progression through them/doing them in different ways was very helpful. Documenting my toy problem process on Github was also satisfying and kept me motivated to do it at least once a day.&lt;/p&gt;

&lt;h3 id=&#34;part-two-execution&#34;&gt;Part Two: Execution&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Applications&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Initially apply to up to 5 a day. Start at 5 or more a day in the first couple weeks.&lt;/li&gt;
&lt;li&gt;When you have just about as many companies as you feel comfortable interviewing with at a given time, stop sending applications or keep it to 1-2 a day. This will depend on the individual, but I wouldn&amp;rsquo;t ramp up applying again until you have less active interviews in your funnel than you&amp;rsquo;d like.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Phone Screens&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;One hour warmup (Interviewing is a performance. Figure out what works for you).&lt;/li&gt;
&lt;li&gt;I schedule phone interviews in the mornings (9am-12pm). Figure out if there&amp;rsquo;s a good time of day for you.&lt;/li&gt;
&lt;li&gt;I have a sheet of paper with me with the name of the interviewer(s) written on it, the name of the company, a reference of the job description handy, a reference of my notes pertaining to the kind of interview, and a list of questions specific to the company.&lt;/li&gt;
&lt;li&gt;Make sure you have a glass of water.&lt;/li&gt;
&lt;li&gt;I put my phone on speakerphone, which works pretty well for me and lets me take notes. Some people prefer nice headphones.&lt;/li&gt;
&lt;li&gt;I also have my computer handy and a copy of my resume. Sometimes a recruiter/hiring manager will want you to take a look at something online in the middle of the interview.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Onsite&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Bring a folder with you to the onsite and your computer/power cord.&lt;/li&gt;
&lt;li&gt;Bring extra copies of your resume.&lt;/li&gt;
&lt;li&gt;Bring a water bottle.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>In which I decide to delegate Rails to the API layer</title>
      <link>https://polina.io/blog/2016/12/10/thoughts/</link>
      <pubDate>Fri, 27 Nov 2015 20:37:51 +0000</pubDate>
      
      <guid>https://polina.io/blog/2016/12/10/thoughts/</guid>
      <description>

&lt;p&gt;I have been tinkering with Rails in my free time for about a year now. Rails was my first foray into web development and Flask was my second, so until now I haven&amp;rsquo;t spent much time using Javascript.&lt;/p&gt;

&lt;p&gt;After spending a few weeks getting more familiar with the wonders of ES6, Coffeescript, Underscore, and jQuery, I recently started working with &lt;a href=&#34;http://backbonejs.org/&#34;&gt;Backbone.js&lt;/a&gt; and have started implementing it in my Rails projects. It has an event system that&amp;rsquo;s nice, and &amp;lsquo;listeners&amp;rsquo; that &amp;lsquo;trigger&amp;rsquo; events. Prior to Backbone I had used a sprinkling of jQuery and Ajax in my projects. Since I could inject Javascript here and there I didn&amp;rsquo;t really understand why someone couldn&amp;rsquo;t just use what Rails gives you (HTML views). So I started thinking about what Rails is really good at and why someone would make the decision to add Backbone to it.&lt;/p&gt;

&lt;p&gt;I think Rails is really good at creating RESTful web services. It structures its routing in terms of a set of resources accessed through uniform URIs that are defined in &lt;code&gt;routes.rb&lt;/code&gt;. This is important because it makes Rails inherently &lt;strong&gt;stateless&lt;/strong&gt;. If you look at a traditional Rails app, you can split it into the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;stateless HTML resources for humans&lt;/li&gt;
&lt;li&gt;stateless JSON (API) resources for machines&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This setup has a few ramifications. The first is this means all of our HTML rendering is done server-side. That&amp;rsquo;s okay, because it&amp;rsquo;s how our request/response model works. However, since we are relying on the server to update the UI, it means that our interface is only as fast as our network connection. We are stuck in &amp;ldquo;click and wait&amp;rdquo; land.&lt;/p&gt;

&lt;p&gt;What if instead of relying on the server to update the UI, we persisted state in the DOM and re-rendered our templates client side? That would be nice, because then we could build out responsive asynchronous interfaces. Our Rails app would no longer be a simple website, it could be a rich web app with highly interactive HTML pages!&lt;/p&gt;

&lt;p&gt;But as I mentioned before, Rails is inherently stateless. How would one go about adding rich interactivity to a Rails app? Well, there are client side frameworks out there that are well suited to the task, so what you&amp;rsquo;ll end up doing is replacing your HTML views with something like Backbone. Instead of your Rails app returning HTML views, it can now act as an API for your Backbone app and return JSON. Your Rails + Backbone app now looks like the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;stateful rich client side UI provided by the Backbone layer for humans&lt;/li&gt;
&lt;li&gt;stateless resource oriented RESTful API provided by the Rails layer for machines&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Backbone &lt;a href=&#34;http://backbonejs.org/#FAQ-rails&#34;&gt;originally started&lt;/a&gt; as a Javascript library in a Rails application, so it lends itself to pairing with Rails very nicely. It is a light framework (&amp;lt;1000 lines of code) that allows you to structure your Javascript code in MVC fashion. It is also based on RESTful services. Whenever you create, update or destroy a Backbone model, you do so via the standard HTTP actions sent to URIs which assume a RESTful architecture (which we have!). When you do this, you are using Rails as an API.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m glad that I&amp;rsquo;ve started learning more Javascript and that I&amp;rsquo;m discovering the world of client-side applications. Instead of replacing Rails, I think adding client side frameworks to it complements nicely:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Rails makes an excellent CRUD RESTful API&lt;/li&gt;
&lt;li&gt;Its asset pipeline makes it straightforward to serve up client side MVCs.&lt;/li&gt;
&lt;li&gt;It has a good ORM, excellent libraries and a really awesome community.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I&amp;rsquo;m really happy with delegating Rails to the API layer. This is also a great turning point in my web development journey&amp;ndash; at this moment my interests of focus are learning more about functional reactive programming, building asynchronous interfaces, and learning how to design great APIs.&lt;/p&gt;

&lt;h4 id=&#34;further-reading&#34;&gt;Further reading&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gumroad.com/l/backbone-js-on-rails&#34;&gt;Backbone on Rails book by thoughtbot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.alexmaccaw.com/rails-is-just-and-api-and-that-s-ok&#34;&gt;Rails is just an API and that&amp;rsquo;s okay&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/questions/11918586/rails-and-backbone-working-together&#34;&gt;Rails and Backbone working together&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Adding image uploading to Rails Projects</title>
      <link>https://polina.io/blog/2016/12/10/image-uploading-rails/</link>
      <pubDate>Wed, 25 Nov 2015 21:43:41 +0000</pubDate>
      
      <guid>https://polina.io/blog/2016/12/10/image-uploading-rails/</guid>
      <description>

&lt;p&gt;When I first looked into adding images to my Rails applications, I thought I had one problem I needed to solve. After doing a bit of research, I started to realize I actually had three problems I needed to solve:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;how to upload an image&lt;/li&gt;
&lt;li&gt;how to resize an image&lt;/li&gt;
&lt;li&gt;how to store an image&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I haven&amp;rsquo;t found a gem that lets you do all of these things in one shot. After a bit of research and trail and error, here are the two main options I found:&lt;/p&gt;

&lt;h4 id=&#34;option-1-carrierwave-minimagick-imagemagick-fog-s3&#34;&gt;Option 1: Carrierwave + MiniMagick + ImageMagick + Fog + S3&lt;/h4&gt;

&lt;p&gt;This involves a lot of moving parts. Let&amp;rsquo;s break it down:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/carrierwaveuploader/carrierwave&#34;&gt;CarrierWave&lt;/a&gt; is a file uploader for Rack based applications. You can install this as a gem.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/minimagick/minimagick&#34;&gt;MiniMagick&lt;/a&gt; is a Ruby wrapper for a command line application called &lt;a href=&#34;http://www.imagemagick.org/script/index.php&#34;&gt;ImageMagick&lt;/a&gt;, which lets you manipulate images. You need to first install ImageMagick locally using &lt;code&gt;brew install imagemagick&lt;/code&gt; and then you can install MiniMagick as a gem.&lt;/li&gt;
&lt;li&gt;Amazon&amp;rsquo;s &lt;a href=&#34;https://aws.amazon.com/s3/&#34;&gt;S3&lt;/a&gt; is a popular and robust choice for storing files such as images. In order to play nicely with Amazon cloud services there&amp;rsquo;s a gem you can use called &lt;a href=&#34;https://github.com/fog/fog&#34;&gt;Fog&lt;/a&gt; that helps you navigate the &amp;ldquo;fog&amp;rdquo;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I tried this approach, and it was all fine and dandy until I got to S3. I couldn&amp;rsquo;t quite escape the fog. I ended up with a cryptic config error and spent another 30 min staring at Amazon&amp;rsquo;s admin panel trying to figure out which key(s) it didn&amp;rsquo;t like. For my lightweight app that just wanted to store simple images, it was a lot of work to get going. I starting looking around for a simpler alternative.&lt;/p&gt;

&lt;h4 id=&#34;option-2-carrierwave-cloudinary&#34;&gt;Option 2: Carrierwave + Cloudinary&lt;/h4&gt;

&lt;p&gt;I&amp;rsquo;m so happy I found this pair! Cloudinary handles both image manipulation and cloud storage for you. And as a bonus, it comes as a Heroku addon! It took 5 min to setup and worked like a charm.&lt;/p&gt;

&lt;p&gt;The only downside to this adventure with image uploaders is that I didn&amp;rsquo;t find a great tutorial out there for tying everything together. Once you find the tools, it&amp;rsquo;s not really clear how you integrate it with your existing models and views. Here&amp;rsquo;s my attempt at that:&lt;/p&gt;

&lt;h3 id=&#34;using-carrierwave-and-cloudinary&#34;&gt;Using Carrierwave and Cloudinary&lt;/h3&gt;

&lt;p&gt;We are going to add a profile picture to a user. Here is an overview of what we want to accomplish:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://polina.io/img/articles/cloudinary.jpg&#34; alt=&#34;&#34; style=&#34;width: 100%;max-height: 100%&#34;&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 1: Add Carrierwave and Cloudinary to your Gemfile&lt;/strong&gt;&lt;/p&gt;

&lt;script src=&#34;https://gist.github.com/polinadotio/0b4be8f5e1693d626cac.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;&lt;strong&gt;Step 2: Add Cloudinary to Heroku&lt;/strong&gt;&lt;/p&gt;

&lt;script src=&#34;https://gist.github.com/polinadotio/8b6f09b9d0ade5e2019c.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;&lt;strong&gt;Step 3: Add a Cloudinary config to your app&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you go to &lt;code&gt;$ heroku config&lt;/code&gt; you should now see a Cloudinary URL. Create a config file called &lt;code&gt;config/initializers/cloudinary.rb&lt;/code&gt; and store the URL in &lt;code&gt;config/application.yml&lt;/code&gt; if you&amp;rsquo;re using &lt;a href=&#34;https://github.com/laserlemon/figaro&#34;&gt;Figaro&lt;/a&gt; to handle your environmental variables.&lt;/p&gt;

&lt;script src=&#34;https://gist.github.com/polinadotio/31e48182f9c74ea854f7.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;Remember to update your environment variables in Heroku, &lt;code&gt;$ figaro heroku:set -e production&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 4: Create an image uploader&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Carrierwave has an generator we can use to create an uploader tool. This uploader provides config options and methods to upload and display our images. Let&amp;rsquo;s call it Avatar. Each of our users will have an avator associated with them, so we will need to add an avator attribute to the users table.&lt;/p&gt;

&lt;script src=&#34;https://gist.github.com/polinadotio/b12e2ed03a04a2a05d25.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;&lt;strong&gt;Step 5: Modify the User model&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;CarrierWave provides a method called &lt;code&gt;mount_uploader&lt;/code&gt; which gives a model attribute additional functionality to assist in uploading. Add the following to &lt;code&gt;user.rb&lt;/code&gt;:&lt;/p&gt;

&lt;script src=&#34;https://gist.github.com/polinadotio/7dea6c166e06958cecf3.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;The second parameter &lt;code&gt;AvatarUploader&lt;/code&gt; tells it which file to use for uploading.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 6: Modify the User controller&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We added a new &lt;code&gt;avatar&lt;/code&gt; attribute to our User model. Now we need to allow the attribute to be updated in our controller. Change your params to the following:&lt;/p&gt;

&lt;script src=&#34;https://gist.github.com/polinadotio/85bacc728f727fcfcdc6.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;&lt;strong&gt;Step 7: Modify the uploader&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Our uploader processes and resizes the images. We want to add/uncomment the following:&lt;/p&gt;

&lt;script src=&#34;https://gist.github.com/polinadotio/98a5664920020e79e6a9.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;&lt;strong&gt;Step 8: Modify the views&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can do this many different ways. Here&amp;rsquo;s one example. I&amp;rsquo;m calling methods provided by &lt;code&gt;avatar_uploader.rb&lt;/code&gt; on my User object to generate a profile picture. Here is a submit form:&lt;/p&gt;

&lt;script src=&#34;https://gist.github.com/polinadotio/5adad618040d0d042383.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;Notice that the above method &lt;code&gt;image_tag()&lt;/code&gt; is being used to display the current profile picture.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 9: Cleanup&lt;/strong&gt;&lt;/p&gt;

&lt;script src=&#34;https://gist.github.com/polinadotio/ef0489abf75b46d57f7d.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;Putting it all together: here is a &lt;a href=&#34;https://github.com/polinadotio/wellesley-urban-dictionary/commit/bc8a71ea5e189f7471bc505fdb7fb4b80889f7fb&#34;&gt;commit&lt;/a&gt; from an app of mine that covers this process from start to finish.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Qualities of a good software engineer</title>
      <link>https://polina.io/blog/2016/12/10/qualities-software-engineer/</link>
      <pubDate>Thu, 10 Sep 2015 21:57:50 +0000</pubDate>
      
      <guid>https://polina.io/blog/2016/12/10/qualities-software-engineer/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://polina.io/img/articles/scary.png&#34; alt=&#34;&#34; style=&#34;width: 100%;max-height: 100%&#34;&gt;&lt;/p&gt;

&lt;p&gt;To be a good software engineer is to engage in a creative, design-oriented activity that is done in a rigorous, systematic way. You are a code whisperer and you care about your end users and your current and future teammates! And yes, sometimes it&amp;rsquo;s confusing and scary and oh god, why is the server melting.&lt;/p&gt;

&lt;p&gt;####You are comfortable working with complexity&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://polina.io/img/articles/donotremove.png&#34; alt=&#34;&#34; style=&#34;width: 100%;max-height: 100%&#34;&gt;&lt;/p&gt;

&lt;p&gt;Computational systems are machines involving immense complexity. That complexity can be mastered intellectually with one tool: abstraction. You should enjoy ignoring some of the details and solving higher order problems. Breaking down the complexity to a level anyone reading your code can easily reason about is key to being a good software engineer. You will be tasked with ensuring a system functions properly without understanding the implementation details of every part.&lt;/p&gt;

&lt;p&gt;Since everything is complex, when you&amp;rsquo;re solving problems you must enjoy taking a logical and thoughtful approach to them.&lt;/p&gt;

&lt;p&gt;####You care about good user-centered design&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://polina.io/img/articles/httpok.png&#34; alt=&#34;&#34; style=&#34;width: 100%;max-height: 100%&#34;&gt;&lt;/p&gt;

&lt;p&gt;A user should not have to understand HTTP status codes to ascertain the state of your website. You must care about making something that a user wants to use. That means not repeating yourself, solving a problem once, write code that does on thing well, and focus on maintainability. That also means remembering that YOU won&amp;rsquo;t be using the software. You also care about writing tests, you fix bugs before writing new code, you do usability testing, you use source control, you have a clearly defined spec, and you use the best tools for the problem.&lt;/p&gt;

&lt;p&gt;####You care about best practices&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://polina.io/img/articles/dolphin.png&#34; alt=&#34;&#34; style=&#34;width: 100%;max-height: 100%&#34;&gt;&lt;/p&gt;

&lt;p&gt;Dolphins cannot run in environments they were not compiled for. You must be passionate about seeking out &lt;a href=&#34;https://github.com/thoughtbot/guides/tree/master/best-practices&#34;&gt;best practices&lt;/a&gt; and contributing to a culture of &lt;a href=&#34;https://github.com/thoughtbot/guides/tree/master/code-review&#34;&gt;good code review&lt;/a&gt; and &lt;a href=&#34;http://www.joelonsoftware.com/articles/fog0000000043.html&#34;&gt;better code&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;####You are comfortable with uncertainty&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://polina.io/img/articles/uncertainty.png&#34; alt=&#34;&#34; style=&#34;width: 100%;max-height: 100%&#34;&gt;&lt;/p&gt;

&lt;p&gt;You must always be learning from your mistakes and learning from others. The field is always changing and the inputs you&amp;rsquo;re designing for will never perfectly match the inputs in reality. You should enjoy solving problems with uncertainty in mind.&lt;/p&gt;

&lt;p&gt;Becoming a good software engineer means:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Putting in the time and effort. You&amp;rsquo;re always learning and practicing.&lt;/li&gt;
&lt;li&gt;Asking questions and learning the same thing from multiple perspectives. If you need to understand something to complete a task, scour the web for tutorials. Try different tutorials. Some will make it click more than others.&lt;/li&gt;
&lt;li&gt;Being involved in the community. Go to talks, become a mentor. Work on puzzles and put them on github. Start a blog. Start a portfolio.&lt;/li&gt;
&lt;li&gt;Imposter syndrome will follow you throughout your career, and the more you learn about programming, the further behind you&amp;rsquo;ll feel. That&amp;rsquo;s okay, you&amp;rsquo;re not being hired to know and do everything programming-related. You&amp;rsquo;re being hired for a very specific set of skills which add value to a company.&lt;/li&gt;
&lt;li&gt;Patience. Do not be afraid to fail 100 times before getting something to work correctly. Keep trying and don&amp;rsquo;t give up!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://polina.io/img/articles/cleanbuild.jpg&#34; alt=&#34;&#34; style=&#34;width: 100%;max-height: 100%&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A short guide to email spoofing</title>
      <link>https://polina.io/blog/2016/12/10/email-spoofing/</link>
      <pubDate>Sun, 06 Sep 2015 21:45:25 +0000</pubDate>
      
      <guid>https://polina.io/blog/2016/12/10/email-spoofing/</guid>
      <description>&lt;p&gt;This is a fun trick I learned that uses a few basic networking concepts. I didn&amp;rsquo;t realize how easy it was to send spoof email via command line. Here&amp;rsquo;s how:&lt;/p&gt;

&lt;p&gt;####Basic idea:&lt;/p&gt;

&lt;p&gt;Establish a TCP connection to a mail server and use SMTP commands to send email from &amp;ldquo;anyone&amp;rdquo; to &amp;ldquo;anyone&amp;rdquo;. :) You&amp;rsquo;ll see what I mean.&lt;/p&gt;

&lt;p&gt;####Concepts:&lt;/p&gt;

&lt;p&gt;TCP, or the Transmission Control Protocol, is a transport layer protocol used for establishing logical communication between applications and different hosts that are not physically connected to one another. Applications can be ones running on your computer (a local host) or the internet (Gmail for example). In this case, I am using TCP to establish a connection from my linux account on a college server to a Google mail server. SMTP is the Simple Mail Transfer Protocol that is the de facto standard for sending email across the internet. It&amp;rsquo;s been around since 1982 and is very minimal&amp;ndash; to this day it will only support 7 bit ASCII characters, which amuses me when I think of multimedia email attachments these days. In this example I&amp;rsquo;m going to use telnet to manually send mail through an SMTP mail server.&lt;/p&gt;

&lt;p&gt;####Step 1: Establish a TCP Connection&lt;/p&gt;

&lt;p&gt;In order to send SMTP commands to a mail server you need to know the host name of the mail server for your domain. My domain is wellesley.edu, so I&amp;rsquo;m going to first query the DNS for the MX record that holds information about my mail domain.&lt;/p&gt;

&lt;p&gt;SSH into my linux account:&lt;/p&gt;

&lt;script src=&#34;https://gist.github.com/polinadotio/2eeb5ddf1bd29755f25f.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;Query DNS for the mail servers that deliver mail to wellesley.edu:&lt;/p&gt;

&lt;script src=&#34;https://gist.github.com/polinadotio/61f0ac58a8feec0336e5.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;From here you can see that Wellesley has 5 different mail servers through Google mail services. We need to pick one of them&amp;ndash; let&amp;rsquo;s pick ALT2.ASPMX.L.GOOGLE.COM. We use telnet to establish the connection and use port 25 because it&amp;rsquo;s a TCP connection:&lt;/p&gt;

&lt;script src=&#34;https://gist.github.com/polinadotio/c6282f4eb5ad33adcb84.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;####Step two: Use SMTP commands to send an email&lt;/p&gt;

&lt;p&gt;Yay we&amp;rsquo;re connected! Now here&amp;rsquo;s where the fun begins. Let&amp;rsquo;s enter in some commands to send a message. A basic message for SMTP needs the following:&lt;/p&gt;

&lt;p&gt;&lt;pre&gt;&lt;code&gt;
MAIL FROM: Sender &lt;a href=&#34;mailto:sending@email.address&#34;&gt;sending@email.address&lt;/a&gt;
RCPT TO: Receiver &lt;a href=&#34;mailto:receiving@email.address&#34;&gt;receiving@email.address&lt;/a&gt;
DATA
FROM: &lt;a href=&#34;mailto:from@an.address&#34;&gt;from@an.address&lt;/a&gt;
T0: &lt;a href=&#34;mailto:to@an.address&#34;&gt;to@an.address&lt;/a&gt;
SUBJECT: email subject
Body of email
.
QUIT
&lt;/pre&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Note that there&amp;rsquo;s a period [.] at the end. You will need that. Let&amp;rsquo;s try this!&lt;/p&gt;

&lt;script src=&#34;https://gist.github.com/polinadotio/5c358ae7a543c019b447.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;And there you have it. Note: you might need to check your spam folder.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://polina.io/img/articles/helloworld.png&#34; alt=&#34;&#34; style=&#34;width: 100%;max-height: 100%&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Creating a syllabus to learn Ruby on Rails</title>
      <link>https://polina.io/blog/2016/12/10/creating-a-syllabus-to-learn-ruby-on-rails/</link>
      <pubDate>Fri, 04 Sep 2015 21:22:02 +0000</pubDate>
      
      <guid>https://polina.io/blog/2016/12/10/creating-a-syllabus-to-learn-ruby-on-rails/</guid>
      <description>&lt;p&gt;This is my syllabus for a self-taught course I created for myself to learn Ruby on Rails. Feel free to take inspiration from it and implement your own courses.&lt;/p&gt;

&lt;p&gt;&lt;a name=&#34;return&#34;&gt;&lt;/a&gt;
&lt;a href=&#34;#objective&#34;&gt;Objective&lt;/a&gt; | &lt;a href=&#34;#goals&#34;&gt;Goals&lt;/a&gt; | &lt;a href=&#34;#overview&#34;&gt;Overview&lt;/a&gt; | &lt;a href=&#34;#materials&#34;&gt;Course Materials&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;#week1&#34;&gt;Week 1&lt;/a&gt; | &lt;a href=&#34;#week2&#34;&gt;Week 2&lt;/a&gt; | &lt;a href=&#34;#week3&#34;&gt;Week 3&lt;/a&gt; | &lt;a href=&#34;#week4&#34;&gt;Week 4&lt;/a&gt; | &lt;a href=&#34;#week5&#34;&gt;Week 5&lt;/a&gt; | &lt;a href=&#34;#week6&#34;&gt;Week 6&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;#week7&#34;&gt;Week 7&lt;/a&gt; | &lt;a href=&#34;#week8&#34;&gt;Week 8&lt;/a&gt; | &lt;a href=&#34;#week9&#34;&gt;Week 9&lt;/a&gt; | &lt;a href=&#34;#week10&#34;&gt;Week 10&lt;/a&gt; | &lt;a href=&#34;#week11&#34;&gt;Week 11&lt;/a&gt; | &lt;a href=&#34;#week12-15&#34;&gt;Weeks 12-15&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;#resources&#34;&gt;Additional Resources&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a name=&#34;objective&#34;&gt;&lt;/a&gt;
##Objective
&lt;a href=&#34;#return&#34;&gt;Return to top&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;My goal is to gain competency and knowledge of best practices in web development by learning and implementing a web development framework. However, it can take hours, days, and weeks to become proficient in the best practices of a specific framework even for experienced developers. This is why I&amp;rsquo;m designing an independent study where I can devote time to doing so. Why do I want to teach myself Rails specifically? A few reasons:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Ruby on Rails is an open-source web framework based on the Ruby programming language.&lt;/li&gt;
&lt;li&gt;Rails is a database-agnostic MVC framework that chooses convention over configuration, which means that it&amp;rsquo;s strongly opinionated when it comes to architectural decisions, naming conventions, paths and patterns.&lt;/li&gt;
&lt;li&gt;Rails is a full stack web application: it includes libraries to manage frontend code, supports SASS and CoffeeScript, and does not need an external tool to manage compiling. It also includes a very opinionated workflow.&lt;/li&gt;
&lt;li&gt;Rails’ structure makes it easy to accommodate change. Rails is particularly good at restructuring your application flow, reusing components in a simple way.&lt;/li&gt;
&lt;li&gt;Rails can easily be extended with a wide variety of external libraries, distributed through Rubygems.
It implements other best practices and methodologies in web development: TDD, REST, and DRY are among them.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To summarize, Rails is a powerful web development framework that lets you be more productive when working on complex projects.&lt;/p&gt;

&lt;p&gt;&lt;a name=&#34;goals&#34;&gt;&lt;/a&gt;
##Course goals
&lt;a href=&#34;#return&#34;&gt;Return to top&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;By the end of the semester, through coursework and projects I aim to have a competent knowledge of:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Ruby&lt;/strong&gt;, including but not limited to: Classes, methods, types, flow control, I/O, modules, Exceptions, Testing, Gems&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ruby on Rails&lt;/strong&gt;, including but not limited to: MVC model, Active Record, Action Controller, Action View, Action Pack, Testing, Routes, Filters/Callbacks, Debugging, Ajax, Action Mailer, Web Services and XML, Extending Rails, Benchmarking and performance, Deployment&lt;/li&gt;
&lt;li&gt;Exposure to other web technologies: HTML/CSS/Javascript etc.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Git&lt;/strong&gt; and &lt;strong&gt;Github&lt;/strong&gt;: Use revision control and keep all course repositories on github&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Heroku&lt;/strong&gt;: understand the different Rails servers (Thin vs Unicorn) for deployment&lt;/li&gt;
&lt;li&gt;Test-driven-development&lt;/li&gt;
&lt;li&gt;Behavior-driven-development&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Product Planning&lt;/strong&gt;: user stories, use cases, wireframes, and mockups&lt;/li&gt;
&lt;li&gt;Exposure to web &lt;strong&gt;APIs&lt;/strong&gt;: Twitter, Gmail, Google Maps, MailChimp, Stripe, etc.&lt;/li&gt;
&lt;li&gt;Take steps towards learning the ropes of becoming a successful developer in the modern open source driven Rails Community.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&#34;overview&#34;&gt;&lt;/a&gt;
##Course overview
&lt;a href=&#34;#return&#34;&gt;Return to top&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Weeks 1-8&lt;/strong&gt;: Fundamentals of Ruby and Ruby on Rails&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Weeks 9-11&lt;/strong&gt;: Build a payments site using Stripe&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Weeks 12-15&lt;/strong&gt;: Extend site and/or work on a project of choice implementing gems of choice&lt;/p&gt;

&lt;p&gt;&lt;a name=&#34;materials&#34;&gt;&lt;/a&gt;
##Main Course materials
&lt;a href=&#34;#return&#34;&gt;Return to top&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://ruby.railstutorial.org/ruby-on-rails-tutorial-book&#34;&gt;&lt;em&gt;Learn Web Development with Rails&lt;/em&gt;&lt;/a&gt; by Michael Hartl&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://learn-rails.com/learn-ruby-on-rails.html&#34;&gt;&lt;em&gt;Learn Ruby on Rails&lt;/em&gt;&lt;/a&gt; by Daniel Kehoe&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.petekeen.net/mastering-modern-payments&#34;&gt;&lt;em&gt;Mastering Modern Payments: Using Stripe with Rails&lt;/em&gt;&lt;/a&gt; by Pete Keen&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.ruby-toolbox.com/&#34;&gt;The Ruby Toolbox&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.codequizzes.com/&#34;&gt;CodeQuizzes&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a name=&#34;week1&#34;&gt;&lt;/a&gt;
##Week One
&lt;a href=&#34;#return&#34;&gt;Return to top&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Setup blog and course&lt;/p&gt;

&lt;p&gt;Set up blog using Octopress that is made with Jekyll, a static site generator made with Rails (so I can use Rails to blog about Rails!)&lt;/p&gt;

&lt;p&gt;Host blog on github, track blogs and changes on github&lt;/p&gt;

&lt;p&gt;Name of blog: &lt;a href=&#34;http://polina.io/&#34;&gt;http://polina.io/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Blog via &lt;a href=&#34;http://octopress.org/docs/blogging/&#34;&gt;Octopress&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a name=&#34;week2&#34;&gt;&lt;/a&gt;
##Week Two
&lt;a href=&#34;#return&#34;&gt;Return to top&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;####Exercises&lt;/p&gt;

&lt;p&gt;Work through &lt;a href=&#34;http://tryruby.org/levels/1/challenges/0&#34;&gt;Try Ruby Exercises&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://ruby.learncodethehardway.org/book/&#34;&gt;Learn Ruby the Hard Way&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://rubymonk.com/&#34;&gt;Rubymonk&lt;/a&gt;: metaprogramming and common ruby methods&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.codecademy.com/tracks/ruby&#34;&gt;Code Academy&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://rubykoans.com/&#34;&gt;Ruby Koans&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;####Quizzes&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.codequizzes.com/topics/28/quizzes/92&#34;&gt;Ruby Array Quiz&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.codequizzes.com/topics/28/quizzes/93&#34;&gt;Hash quiz&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.codequizzes.com/topics/28/quizzes/94&#34;&gt;Object Oriented Programming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.codequizzes.com/topics/28/quizzes/95&#34;&gt;More OOP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.codequizzes.com/topics/28/quizzes/96&#34;&gt;Inheritance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.codequizzes.com/topics/28/quizzes/97&#34;&gt;Object Oriented Design&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.codequizzes.com/topics/28/quizzes/98&#34;&gt;Code Blocks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;####Homework&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;RESTful micro framework in Ruby&lt;/li&gt;
&lt;li&gt;Write Blog Post&lt;/li&gt;
&lt;li&gt;Update Github&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&#34;week3&#34;&gt;&lt;/a&gt;
##Week three
&lt;a href=&#34;#return&#34;&gt;Return to top&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;#####Exercises&lt;/p&gt;

&lt;p&gt;Chapters 1-2 &lt;em&gt;Learn Web Development with Rails&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;From zero to deploy: Version Control with GIT, deploying with Heroku&lt;/li&gt;
&lt;li&gt;A demo app: planning the application, the Users resource, the Microposts resource&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Chapters 1-8 &lt;em&gt;Learn Rails&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Jeffrey&amp;rsquo;s &lt;a href=&#34;http://net.tutsplus.com/tutorials/ruby/the-best-way-to-learn-ruby-on-rails/&#34;&gt;introduction&lt;/a&gt; to Rails&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.codeschool.com/courses/rails-for-zombies-redux&#34;&gt;Rails for Zombies&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Rails intro &lt;a href=&#34;http://net.tutsplus.com/tutorials/ruby/the-intro-to-rails-screencast-i-wish-i-had/&#34;&gt;screencast&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Git &lt;a href=&#34;http://gitimmersion.com/&#34;&gt;Immersion&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;#####Quizzes&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Learning Unix for OS X&lt;/li&gt;
&lt;li&gt;Basic Git Commands&lt;/li&gt;
&lt;li&gt;Basic Git&lt;/li&gt;
&lt;li&gt;Git Rebasing&lt;/li&gt;
&lt;li&gt;Git branch off a branch&lt;/li&gt;
&lt;li&gt;Git interactive rebasing&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;####Homework&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Implement Git in Ruby&lt;/li&gt;
&lt;li&gt;App from &lt;em&gt;Learn Rails&lt;/em&gt;: Contact form, save to Google Drive&lt;/li&gt;
&lt;li&gt;Update Github&lt;/li&gt;
&lt;li&gt;Write Blog Post&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For fun: Basic &lt;a href=&#34;http://www.dontfeartheinternet.com/&#34;&gt;HTML and CSS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a name=&#34;week4&#34;&gt;&lt;/a&gt;
##Week Four
&lt;a href=&#34;#return&#34;&gt;Return to top&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;####Exercises&lt;/p&gt;

&lt;p&gt;Chapters 3-4 &lt;em&gt;Learn Web Development with Rails&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Static Pages&lt;/li&gt;
&lt;li&gt;Rails Flavored Ruby&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Chapters 9-28 &lt;em&gt;Learn Rails&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;####Homework&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Devise for authentication with ActiveRecord and SQLite for a database&lt;/li&gt;
&lt;li&gt;Devise for authentication with a MongoDB datastore&lt;/li&gt;
&lt;li&gt;Update Github&lt;/li&gt;
&lt;li&gt;Write Blog Post&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&#34;week5&#34;&gt;&lt;/a&gt;
##Week Five
&lt;a href=&#34;#return&#34;&gt;Return to top&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;####Exercises&lt;/p&gt;

&lt;p&gt;Chapters 5-6 &lt;em&gt;Learn Web Development with Rails&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Filling the Layout&lt;/li&gt;
&lt;li&gt;Site navigation&lt;/li&gt;
&lt;li&gt;Bootstrap, CSS&lt;/li&gt;
&lt;li&gt;Partials&lt;/li&gt;
&lt;li&gt;Sass and asset pipeline&lt;/li&gt;
&lt;li&gt;Layout links&lt;/li&gt;
&lt;li&gt;User signup: first step&lt;/li&gt;
&lt;li&gt;Modeling Users&lt;/li&gt;
&lt;li&gt;User model&lt;/li&gt;
&lt;li&gt;User validations&lt;/li&gt;
&lt;li&gt;Adding a secure password&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;####Homework&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;OmniAuth for authentication with a MongoDB datastore&lt;/li&gt;
&lt;li&gt;Base-camp style subdomains with Devise and MongoDB&lt;/li&gt;
&lt;li&gt;Update GitHub&lt;/li&gt;
&lt;li&gt;Write Blog Post&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;[Additional Homework]&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Make a to-do list app with Rails&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&#34;week6&#34;&gt;&lt;/a&gt;
##Week Six
&lt;a href=&#34;#return&#34;&gt;Return to top&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;####Exercises&lt;/p&gt;

&lt;p&gt;Chapters 7-8 &lt;em&gt;Learn Web Development with Rails&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Sign up&lt;/li&gt;
&lt;li&gt;Showing Users&lt;/li&gt;
&lt;li&gt;Signup form&lt;/li&gt;
&lt;li&gt;Signup failure&lt;/li&gt;
&lt;li&gt;Signup success&lt;/li&gt;
&lt;li&gt;Sign in, Sign out&lt;/li&gt;
&lt;li&gt;Sessions and sign in failure&lt;/li&gt;
&lt;li&gt;Sign in success&lt;/li&gt;
&lt;li&gt;Introduction to Cucumber&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;####Homework&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Devise for authentication and CanCan for authorization&lt;/li&gt;
&lt;li&gt;Integrating Rails 4.0 and Twitter Bootstrap 3.0&lt;/li&gt;
&lt;li&gt;Update GitHub&lt;/li&gt;
&lt;li&gt;Write Blog Post&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&#34;week7&#34;&gt;&lt;/a&gt;
##Week Seven
&lt;a href=&#34;#return&#34;&gt;Return to top&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;####Exercises&lt;/p&gt;

&lt;p&gt;Chapters 9-10 &lt;em&gt;Learn Web Development with Rails&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Updating, showing, and deleting users&lt;/li&gt;
&lt;li&gt;Updating users&lt;/li&gt;
&lt;li&gt;Authorization&lt;/li&gt;
&lt;li&gt;Showing all users&lt;/li&gt;
&lt;li&gt;Deleting users&lt;/li&gt;
&lt;li&gt;Using Microposts&lt;/li&gt;
&lt;li&gt;A micropost model&lt;/li&gt;
&lt;li&gt;Showing microposts&lt;/li&gt;
&lt;li&gt;Manipulating microposts&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;####Homework&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Application for a startup prelaunch signup site&lt;/li&gt;
&lt;li&gt;Update GitHub&lt;/li&gt;
&lt;li&gt;Write BlogPost&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&#34;week8&#34;&gt;&lt;/a&gt;
##Week Eight
&lt;a href=&#34;#return&#34;&gt;Return to top&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;####Exercises&lt;/p&gt;

&lt;p&gt;Chapter 11 &lt;em&gt;Learn Web Development with Rails&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The Relationship model&lt;/li&gt;
&lt;li&gt;A web interface for following users&lt;/li&gt;
&lt;li&gt;The status feed&lt;/li&gt;
&lt;li&gt;Conclusion&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;####Homework&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Site with subscription billing using Stripe&lt;/li&gt;
&lt;li&gt;Site with subscription billing using Recurly&lt;/li&gt;
&lt;li&gt;Update GitHub&lt;/li&gt;
&lt;li&gt;Write Blog Post&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;[Additional Homework]&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create scaled down reddit clone in rails&lt;/li&gt;
&lt;li&gt;Recreate Twitter in rails&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&#34;week9&#34;&gt;&lt;/a&gt;
##Week Nine
&lt;a href=&#34;#return&#34;&gt;Return to top&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;####Exercises&lt;/p&gt;

&lt;p&gt;Chapters 1-3 &lt;em&gt;Mastering Modern Payments: Using Stripe with Rails&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Introduction&lt;/li&gt;
&lt;li&gt;The Simplest Stripe Integration&lt;/li&gt;
&lt;li&gt;Security and PCI Compliance&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;####Homework&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Start payments project&lt;/li&gt;
&lt;li&gt;Blog&lt;/li&gt;
&lt;li&gt;Update Github&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&#34;week10&#34;&gt;&lt;/a&gt;
##Week Ten
&lt;a href=&#34;#return&#34;&gt;Return to top&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;####Exercises&lt;/p&gt;

&lt;p&gt;Chapters 4-6 &lt;em&gt;Mastering Modern Payments: Using Stripe with Rails&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Custom Payment forms&lt;/li&gt;
&lt;li&gt;State and History&lt;/li&gt;
&lt;li&gt;Handling Webhooks&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;####Homework&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Work on payments project&lt;/li&gt;
&lt;li&gt;Blog&lt;/li&gt;
&lt;li&gt;Update Github&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&#34;week11&#34;&gt;&lt;/a&gt;
##Week Eleven
&lt;a href=&#34;#return&#34;&gt;Return to top&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;####Exercises&lt;/p&gt;

&lt;p&gt;Chapters 7-10 &lt;em&gt;Mastering Modern Payments: Using Stripe with Rails&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Processing payments with Background workers&lt;/li&gt;
&lt;li&gt;Subscriptions&lt;/li&gt;
&lt;li&gt;Marketplaces&lt;/li&gt;
&lt;li&gt;Additional Resources&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;####Homework&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Finish/continue payments project&lt;/li&gt;
&lt;li&gt;Blog&lt;/li&gt;
&lt;li&gt;Update Github&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&#34;week12-15&#34;&gt;&lt;/a&gt;
##Weeks 12-15
Implement popular Gems and test Rails knowledge
&lt;a href=&#34;#return&#34;&gt;Return to top&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Quizzes&lt;/strong&gt; to test Rails knowledge&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.codequizzes.com/topics/3/quizzes/10&#34;&gt;MVC without generators&lt;/a&gt;: Create a RESTful model, view, and controller without using any rails generators.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.codequizzes.com/topics/3/quizzes/11&#34;&gt;Nested Resources&lt;/a&gt;: Create the model, view, and controller for a nested resource.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.codequizzes.com/topics/3/quizzes/15&#34;&gt;Database Queries&lt;/a&gt;: Structure database queries to get specific information from a database efficiently.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.codequizzes.com/topics/3/quizzes/16&#34;&gt;Polymorphism&lt;/a&gt;: Make a resource that belongs_to two other resources for nested comments.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.codequizzes.com/topics/3/quizzes/45&#34;&gt;Active Record&lt;/a&gt;: Associations, delegation, callbacks, etc.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.codequizzes.com/topics/3/quizzes/54&#34;&gt;Many to Many Relationships&lt;/a&gt;: Rails practice problems on has_and_belongs_to_many and has_many :through relationships&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;####The Ruby Toolbox&lt;/p&gt;

&lt;p&gt;Choose several of the following &lt;a href=&#34;https://www.ruby-toolbox.com/&#34;&gt;areas&lt;/a&gt; and create apps with a focus on implementing popular gems in those areas:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Active Record Plugins&lt;/li&gt;
&lt;li&gt;Background processing&lt;/li&gt;
&lt;li&gt;Code Quality: code metrics&lt;/li&gt;
&lt;li&gt;Communication&lt;/li&gt;
&lt;li&gt;Content Management and Blogging&lt;/li&gt;
&lt;li&gt;CSS&lt;/li&gt;
&lt;li&gt;Data Persistence&lt;/li&gt;
&lt;li&gt;Dev Tools&lt;/li&gt;
&lt;li&gt;Documentation Tools&lt;/li&gt;
&lt;li&gt;Graphics&lt;/li&gt;
&lt;li&gt;HTML and Markups&lt;/li&gt;
&lt;li&gt;Javascript&lt;/li&gt;
&lt;li&gt;Maintenance and monitoring&lt;/li&gt;
&lt;li&gt;Package and depedency management&lt;/li&gt;
&lt;li&gt;Provision, deploy, host&lt;/li&gt;
&lt;li&gt;Rails plugins&lt;/li&gt;
&lt;li&gt;Security&lt;/li&gt;
&lt;li&gt;Testing&lt;/li&gt;
&lt;li&gt;Time and Space&lt;/li&gt;
&lt;li&gt;Web apps, Services, and Interaction&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;####Homework&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Work on project(s)&lt;/li&gt;
&lt;li&gt;Update blog&lt;/li&gt;
&lt;li&gt;Update Github&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;####Optional Quizzes&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.codequizzes.com/topics/5/quizzes/7&#34;&gt;Recursion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.codequizzes.com/topics/5/quizzes/99&#34;&gt;Big O&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.codequizzes.com/topics/27/quizzes/90&#34;&gt;Selectors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.codequizzes.com/topics/27/quizzes/91&#34;&gt;Inheritance and the cascade&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.codequizzes.com/topics/2/quizzes/3&#34;&gt;Beginning/Intermediate jQuery&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;####Learn/test Javascript knowledge&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.codequizzes.com/topics/26/quizzes/84&#34;&gt;Quiz #1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.codequizzes.com/topics/26/quizzes/85&#34;&gt;Quiz #2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.codequizzes.com/topics/26/quizzes/87&#34;&gt;Quiz #3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.codequizzes.com/topics/26/quizzes/88&#34;&gt;Quiz #4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.codequizzes.com/topics/26/quizzes/89&#34;&gt;Quiz #5&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&#34;resources&#34;&gt;&lt;/a&gt;
##Additional Resources
&lt;a href=&#34;#return&#34;&gt;Return to top&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Books&lt;/strong&gt; (in no particular order)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.manning.com/katz/&#34;&gt;Rails3 in Action&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://pragprog.com/book/rails4/agile-web-development-with-rails-4&#34;&gt;Agile Web Development in Rails&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.rubyinside.com/the-rails-way-by-obie-fernandez-679.html&#34;&gt;The Rails Way&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://ruby-doc.com/docs/ProgrammingRuby/&#34;&gt;Programming Ruby: The Pragmatic Programmer’s Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://shop.oreilly.com/product/9780596516178.do&#34;&gt;The Ruby Programming Language&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.poodr.com/&#34;&gt;Practical Object-Oriented Design in Ruby&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://guides.rubyonrails.org/getting_started.html&#34;&gt;Rails Guides&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/bbatsov/ruby-style-guide&#34;&gt;Ruby Style Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://testfirst.org/learn_ruby&#34;&gt;Test First&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://designpatternsinruby.com/&#34;&gt;Design Patterns in Ruby&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://eloquentruby.com/&#34;&gt;Eloquent Ruby&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.manning.com/black2/&#34;&gt;Well Grounded Rubyist&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://pragprog.com/book/achbd/the-rspec-book&#34;&gt;The RSpec Book&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;####Podcasts&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://railscasts.com/&#34;&gt;Railscasts&lt;/a&gt;: tutorials&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://ruby5.envylabs.com/&#34;&gt;Ruby5&lt;/a&gt;: latest news in the Ruby Community&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://thechangelog.com/&#34;&gt;The Changelog&lt;/a&gt;: open source news&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://itunes.apple.com/us/podcast/coderpath-podcast/id214162182?mt=2&#34;&gt;CoderPath&lt;/a&gt;: Ruby-focused interview and discussion podcast&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.se-radio.net/&#34;&gt;Software Engineering Radio&lt;/a&gt;: NPR for SWEs&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://thisdeveloperslife.com/&#34;&gt;This Developer’s Life&lt;/a&gt;: &lt;em&gt;This American Life&lt;/em&gt; for SWEs&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://pragprog.com/podcasts&#34;&gt;Pragmatic Podcasts&lt;/a&gt;: excellent book reviews from the Pragmatic Bookshelf&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;####Meetups&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://railsgirls.com/&#34;&gt;Rails Girls&lt;/a&gt;: International community that sponsors free rails workshops for women. Based in Finland.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.railsbridge.org/&#34;&gt;RailsBridge&lt;/a&gt;: Free rails workshops for women. Based in San Francisco.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.meetup.com/Boston-Ruby-Women/&#34;&gt;Boston Ruby Women&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.girldevelopit.com/chapters/boston&#34;&gt;Girl Develop It Boston&lt;/a&gt;: Free introductory workshops for women.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.meetup.com/Rails-Boston/&#34;&gt;Boston Ruby on Rails&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;####Conferences
* &lt;a href=&#34;http://www.railsconf.com/2013/talks.html&#34;&gt;railsconf 2013 talks- Portland&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;####Hackathons&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.hcs.harvard.edu/~harvardwomenincs/wecode.php#&#34;&gt;WECode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://2014s.pennapps.com/&#34;&gt;PennApps&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;####Community&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://news.ycombinator.com/&#34;&gt;Hacker News&lt;/a&gt;: Ladies you should really follow this. It&amp;rsquo;s like reddit with less bullshit.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.reddit.com/&#34;&gt;Reddit&lt;/a&gt;: There are good subreddits out there to discover.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/&#34;&gt;Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://confreaks.com/&#34;&gt;Confreaks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://greenruby.org/&#34;&gt;Green Ruby&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://projecteuler.net/&#34;&gt;Project Euler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.hackerrank.com/tracks&#34;&gt;HackerRank&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://railsbest.com/&#34;&gt;Rails Best Practices&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.readysetrails.com/&#34;&gt;Ready Set Rails&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://subinterest.com/rubies-in-the-rough&#34;&gt;Rubies in the Rough&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/generalassembly/ga-ruby-on-rails-for-devs&#34;&gt;General Assembly: Ruby on rails for developers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://rubyquiz.com/&#34;&gt;Ruby Quiz&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://rubyrogues.com/&#34;&gt;Ruby Rogues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bitnami.com/stack/ruby&#34;&gt;Ruby Stack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.therubygame.com/challenges/distressed-ducks/submissions&#34;&gt;The Ruby Game&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;[Feel free to &lt;i class=&#34;fa fa-code-fork&#34;&gt;&lt;/i&gt; this on &lt;a href=&#34;https://github.com/polinadotio/ruby-on-rails-syllabus&#34;&gt;&lt;i class=&#34;fa fa-github-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;]&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Accepting payments with Stripe and Ruby on Rails</title>
      <link>https://polina.io/blog/2016/12/10/stripe-ruby/</link>
      <pubDate>Fri, 07 Aug 2015 21:56:46 +0000</pubDate>
      
      <guid>https://polina.io/blog/2016/12/10/stripe-ruby/</guid>
      <description>&lt;p&gt;Global digital currencies such as Bitcoin are disrupting online commerce and the landscape of digital payments is going to undergo a lot of change in the next decade. This reflects a popular use of the internet: to pass bits back and forth that represent transactions in exchange for goods and services.&lt;/p&gt;

&lt;p&gt;Buying things on the internet and getting billed for subscriptions is ubiquitous in our day to day lives. Yet, building a site that accepts traditional payment methods can be a daunting task. Dealing with redirects, logins, and checkouts with PayPal API can be a huge pain– but fear not! I will walk through the basic structure of an ecommerce site and then implement an application with Stripe subscription billing and an application with the Hello World of payments: Stripe Checkout for Rails.&lt;/p&gt;

&lt;p&gt;####Why Ruby on Rails and Stripe?&lt;/p&gt;

&lt;p&gt;Stripe&amp;rsquo;s products are easy to use, well documented, have clear cut pricing, integrate easily into Rails applications, and are arguably the most straightforward way to learn how to handle online payments. They currently offer an &lt;a href=&#34;https://stripe.com/docs/api/&#34;&gt;API&lt;/a&gt; and full-featured &lt;a href=&#34;https://stripe.com/docs&#34;&gt;checkout&lt;/a&gt; handled by Stripe. &lt;a href=&#34;http://rubyonrails.org/&#34;&gt;Ruby on Rails&lt;/a&gt; is a database agnostic, robust, opinionated web development framework with a large community behind it and many resources in which to learn and contribute.&lt;/p&gt;

&lt;p&gt;####How ecommerce sites work&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Membership sites that restrict access to content (media, Software as a Service (SaaS), etc.)&lt;/li&gt;
&lt;li&gt;Revenue model is the same: subscription based services, usually paid monthly.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;####Basic functionality:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Content/web functionality to deliver&lt;/li&gt;
&lt;li&gt;Landing pages to convert visitors to paying customers&lt;/li&gt;
&lt;li&gt;User management to register/remove users&lt;/li&gt;
&lt;li&gt;Access control to limit site wide access&lt;/li&gt;
&lt;li&gt;Authorization management to restrict access to content or services based on role or other characteristics&lt;/li&gt;
&lt;li&gt;Account management to maintain records/subscription status&lt;/li&gt;
&lt;li&gt;Recurring billing system for periodic payment transactions&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;####Key challenges/requirements:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;PCI compliance: key requirement for any ecommerce site. This will minimize risk of customer credit card exposure. Your website will meet PCI compliance if you accept payment information through the Stripe JS library and serve your payment page through SSL. It’s wise to host any app that requires login through an SSL connection.&lt;/li&gt;
&lt;li&gt;Merchant account: a line of credit that allows a business to accept credit card payments from its customers. Stripe provides this service.
Recurring billing and account management must be in sync. Stripe provides webhooks to make sure this happens. Stripe will initiate an HTTP request to the app and that will notify the app to change a subscription status.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;####Setting up Subscription Billing with Stripe API&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Use meta tag to set the Stripe Public API Key&lt;/li&gt;
&lt;li&gt;Access external Javascript libraries to submit data to Stripe and obtain a Stripe token that indirectly references a credit card.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://polina.io/img/articles/stripe_api.png&#34; alt=&#34;&#34; style=&#34;width: 100%;max-height: 100%&#34;&gt;&lt;/p&gt;

&lt;p&gt;####Additional considerations for subscriptions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Tiered pricing for multiple subscription plans&lt;/li&gt;
&lt;li&gt;Optional &amp;ldquo;free trial&amp;rdquo; subscription&lt;/li&gt;
&lt;li&gt;Subscribers can upgrade/downgrade plans&lt;/li&gt;
&lt;li&gt;Subscribers can cancel subscription plans&lt;/li&gt;
&lt;li&gt;Configure the subscription renewal period (Stripe defaults to one month)&lt;/li&gt;
&lt;li&gt;Administrator can change subscription plan or delete user&lt;/li&gt;
&lt;li&gt;Basecamp style subdomains (each user gets their own subdomain)&lt;/li&gt;
&lt;li&gt;Multitenancy database segmentation (ex. using &lt;a href=&#34;https://github.com/influitive/apartment&#34;&gt;Apartment&lt;/a&gt; gem)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;#####Landing Page&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://polina.io/img/articles/api_home_page.png&#34; alt=&#34;&#34; style=&#34;width: 100%;max-height: 100%&#34;&gt;&lt;/p&gt;

&lt;p&gt;#####Subscribe&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://polina.io/img/articles/api_sign_up.png&#34; alt=&#34;&#34; style=&#34;width: 100%;max-height: 100%&#34;&gt;&lt;/p&gt;

&lt;p&gt;#####Admin&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://polina.io/img/articles/api_admin.png&#34; alt=&#34;&#34; style=&#34;width: 100%;max-height: 100%&#34;&gt;&lt;/p&gt;

&lt;p&gt;####Setting up Simple Payments with Stripe Checkout&lt;/p&gt;

&lt;p&gt;Embedded payment form that works for desktop, mobile, tablet
Entire purchase experience handled by Stripe.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://polina.io/img/articles/stripe_checkout.png&#34; alt=&#34;&#34; style=&#34;width: 100%;max-height: 100%&#34;&gt;&lt;/p&gt;

&lt;p&gt;#####Landing Page&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://polina.io/img/articles/checkout_list.png&#34; alt=&#34;&#34; style=&#34;width: 100%;max-height: 100%&#34;&gt;&lt;/p&gt;

&lt;p&gt;#####Product Checkout&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://polina.io/img/articles/checkout_pay.png&#34; alt=&#34;&#34; style=&#34;width: 100%;max-height: 100%&#34;&gt;&lt;/p&gt;

&lt;p&gt;####Future of electronic payments&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Mobile: 1.5 billion global smartphone users predicted by 2017&lt;/li&gt;
&lt;li&gt;Underserved merchants want alternative way to pay: SaaS based companies and industries in developing markets&lt;/li&gt;
&lt;li&gt;Decentralized cryptocurrencies gaining traction&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;####Resources:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.railstutorial.org/book&#34;&gt;Ruby on Rails Tutorial&lt;/a&gt; by Michael Hartl&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.masteringmodernpayments.com/&#34;&gt;Mastering Modern Payments: Using Stripe with Rails&lt;/a&gt; by Pete Keen&lt;/li&gt;
&lt;li&gt;Daniel Kehoe’s &lt;a href=&#34;http://railsapps.github.io/&#34;&gt;RailsApps&lt;/a&gt; Project&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://gilesbowkett.blogspot.com/2013/10/new-ebook-software-as-disservice-fixing.html&#34;&gt;Software as a Disservice&lt;/a&gt; by Giles Bowkett&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Setting up my personal site</title>
      <link>https://polina.io/blog/2016/12/10/setting-up-personal-site/</link>
      <pubDate>Sat, 01 Aug 2015 21:59:14 +0000</pubDate>
      
      <guid>https://polina.io/blog/2016/12/10/setting-up-personal-site/</guid>
      <description>

&lt;p&gt;This was originally going to be a few notes on how to set up a Middleman blog, but I wanted to do my personal site justice and document my previous experiences. This current site is the 5th(!) iteration of my personal site. Historically I like to tinker with my personal page and like to iterate frequently. Here are the previous versions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Jekyll &lt;a href=&#34;https://github.com/polinadotio/psoshnin.github.io--v1/tree/jekyll-bootstrap&#34;&gt;blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/polinadotio/single-page-site-with-d3&#34;&gt;Single Page App&lt;/a&gt; using a D3.js visualization&lt;/li&gt;
&lt;li&gt;Octopress &lt;a href=&#34;https://github.com/polinadotio/psoshnin.github.io--v3&#34;&gt;blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Homemade &lt;a href=&#34;https://github.com/polinadotio/static-blog-generator&#34;&gt;static blog generator&lt;/a&gt; written in Flask&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All are static sites and all are hosted using &lt;a href=&#34;https://pages.github.com/&#34;&gt;Github pages&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&#34;what-is-a-static-site&#34;&gt;What is a static site?&lt;/h4&gt;

&lt;p&gt;A static site is one that is comprised solely of static content. This means that all of your HTML, CSS, and Javascript files already exist and are waiting to served. Dynamic sites, to contrast, generate pages on demand and may return different content based on the request, what&amp;rsquo;s in the database, etc.&lt;/p&gt;

&lt;p&gt;There&amp;rsquo;s a couple of great things about using a static site. The first is that serving static content simplifies the process of deploying your site. For personal blogs that usually host articles and such, there isn&amp;rsquo;t any need for dynamic content. This also leads to better security and a performance boost (it&amp;rsquo;s very easy to cache static content and you&amp;rsquo;re not running any application code).&lt;/p&gt;

&lt;p&gt;The second is that Github allows you to host a static site for free using Github pages. This is very convenient, especially since you may already be keeping your site on Github :).&lt;/p&gt;

&lt;h4 id=&#34;how-do-i-make-a-static-site&#34;&gt;How do I make a static site?&lt;/h4&gt;

&lt;p&gt;The simplest thing you can do is create an &lt;code&gt;index.html&lt;/code&gt; file in a Github repo and title the repo &lt;code&gt;github-username.github.io&lt;/code&gt;. When you go to that link you&amp;rsquo;ll see your html file.&lt;/p&gt;

&lt;p&gt;The next thing you can do is try out a static site generator. They can make the deployment process nicer for you and add special features that make blogging easier. Here are a few popular static site generators:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://jekyllrb.com/&#34;&gt;Jekyll&lt;/a&gt;, generator written in Ruby.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/imathis/octopress&#34;&gt;Octopress&lt;/a&gt;, a blogging framework built on top of Jekyll.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.getpelican.com/&#34;&gt;Pelican&lt;/a&gt;, generator written in Python.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.gitbook.com/&#34;&gt;Gitbook&lt;/a&gt;, a full-featured publishing platform.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A third option is to roll your own static site generator. I went this route after playing around with both Jekyll and Octopress. They both have a lot of awesome features, but I wasn&amp;rsquo;t using most of them and I was getting bogged down by how much code I was sifting through that I didn&amp;rsquo;t understand. So I made my own! I used &lt;a href=&#34;http://flask.pocoo.org/&#34;&gt;Flask&lt;/a&gt; and &lt;a href=&#34;http://pythonhosted.org/Frozen-Flask/&#34;&gt;Frozen-Flask&lt;/a&gt;. If you&amp;rsquo;re interested in learning more, I hope to write a blog post on it in the future.&lt;/p&gt;

&lt;h4 id=&#34;why-middleman&#34;&gt;Why Middleman?&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;https://middlemanapp.com/&#34;&gt;Middleman&lt;/a&gt; is a static site generator written by the lovely folks at &lt;a href=&#34;https://thoughtbot.com/&#34;&gt;thoughtbot&lt;/a&gt;. I initially gave Middleman a shot because it&amp;rsquo;s very similar to Rails and I was learning Rails at the time. Middleman uses concepts like partials, erb/haml templating, and the asset pipeline which are all things you&amp;rsquo;ll find when using Rails.&lt;/p&gt;

&lt;p&gt;The reason I&amp;rsquo;ve decided to stick with Middleman is I&amp;rsquo;ve found it to be a nice compromise between the perks of using a maintained static site generator and using a tool that is lightweight and doesn&amp;rsquo;t make me feel bogged down by superfluous features. I also think the thoughtbot team is really awesome.&lt;/p&gt;

&lt;h4 id=&#34;my-workflow&#34;&gt;My workflow&lt;/h4&gt;

&lt;p&gt;My Middleman generator lives in the &lt;code&gt;source&lt;/code&gt; branch and my blog lives in &lt;code&gt;master&lt;/code&gt;. I make all of my edits in &lt;code&gt;source&lt;/code&gt;. To create a new blog post, I add a &lt;code&gt;post-title.html.markdown&lt;/code&gt; file to my articles directory and write using Markdown. To see my site locally I run &lt;code&gt;$ middleman&lt;/code&gt;. To deploy to &lt;code&gt;master&lt;/code&gt; I run &lt;code&gt;$ middleman build&lt;/code&gt; to build my static content and then &lt;code&gt;$ middleman deploy&lt;/code&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>What does a software developer do?</title>
      <link>https://polina.io/blog/2016/12/10/what-developers-do/</link>
      <pubDate>Sun, 05 Jul 2015 22:00:42 +0000</pubDate>
      
      <guid>https://polina.io/blog/2016/12/10/what-developers-do/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;https://polina.io/img/articles/computer_problems.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;

&lt;p&gt;It can be hard to tell folks who aren&amp;rsquo;t familiar with computer science or the tech industry what I do. The problem sets I had in college aren&amp;rsquo;t a good reflection of what I do either, so my fellow classmates who took 1 or 2 computer science courses probably won&amp;rsquo;t have a good idea of what a paid developer does. Here&amp;rsquo;s generally what I do:&lt;/p&gt;

&lt;h4 id=&#34;1-i-translate-product-requirements-into-code&#34;&gt;1. I translate product requirements into code&lt;/h4&gt;

&lt;p&gt;This is the funnest part of development. You are getting paid to solve problems, and in solving those problems you are creating business value to your employer. Depending on the team and the scope of the project, you may be given feature specs by a project manager, or you may be part of writing those feature specs. You may also be part of the planning process where problems/features are articulated and you help turn them into requirements for a solution. This not only involves exercising your craft as a developer, but your ability to understand and communicate on a high level to your team and your product owner. Sometimes it also involves communicating how much time it will take to get something done, which leads me to&amp;hellip;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://polina.io/img/articles/write_good_code.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;

&lt;h4 id=&#34;2-i-estimate-how-much-time-a-project-feature-task-will-take&#34;&gt;2. I estimate how much time a project/feature/task will take&lt;/h4&gt;

&lt;p&gt;A tech lead may assign certain tasks an estimated time of completion, or you may be in charge of understanding how long something will take you. At any rate, if you&amp;rsquo;re getting paid to code you will undoubtedly hear the question &amp;ldquo;how long will this take?&amp;rdquo;. You will hear it from your product manager, an account manager who wants that feature for their client, the sales team, the design team, etc. I consider this a learned skill akin to an art form. You will need to have knowledge of your code base, the various stakeholders, and other members of your team. You&amp;rsquo;ll need to understand how long writing the new feature, debugging, and testing will take you. And you&amp;rsquo;ll need to understand how to communicate your progress to the various stakeholders. For example, if you&amp;rsquo;ve been assigned a task where you&amp;rsquo;re fixing a bug affecting a large account for your startup, you probably have an account manager who wants it fixed ASAP and doesn&amp;rsquo;t fully understand where this task fits in on your priority list or how long it will take you. You may not understand how long it will take you either, since it was a regression that was introduced to the code base and you may or may be not familiar with that part of the code base. Continuous communication with all stakeholders is key.&lt;/p&gt;

&lt;h4 id=&#34;3-i-write-tests&#34;&gt;3. I write tests&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Always code as if the guy who ends up maintaining your code will be a violent psychopath who knows where you live.&amp;rdquo;
- Martin Golding&lt;/p&gt;

&lt;p&gt;&amp;ldquo;If you don’t like testing your product, most likely your customers won’t like to test it either.”
- Anonymous&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Any tech team worth their salt will emphasize writing tests as part of writing a successful feature. Some might have their own QA team that writes tests for them. Some might assume you have written tests for your feature. Testing is at the core of developing software people want to use and buy.&lt;/p&gt;

&lt;p&gt;Some tech teams will even follow Test Driven Development (TDD). Using TDD, you will write tests for functionality that doesn&amp;rsquo;t exist, watch them fail, implement the functionality, and eventually watch them pass. I&amp;rsquo;m not confident you will find this in academia.&lt;/p&gt;

&lt;h4 id=&#34;4-i-find-resolve-bugs&#34;&gt;4. I find/resolve bugs&lt;/h4&gt;

&lt;p&gt;Sometimes you will feel like you are constantly finding, fixing, and talking about bugs in your code base. You will hear your manager talk about the &lt;a href=&#34;https://en.wikipedia.org/wiki/Technical_debt&#34;&gt;technical debt&lt;/a&gt; your org has. This is a fact of life when getting paid to code. However, you do not need to be drowning in tech debt every day (that is what those tests were hopefully for!).&lt;/p&gt;

&lt;h4 id=&#34;5-i-catch-up-on-email-task-threads-go-to-meetings&#34;&gt;5. I catch up on email/task threads/go to meetings&lt;/h4&gt;

&lt;p&gt;If you work for an entity who employs you, chances are you are going to have to more spend time than you want engaged in these three activities. As a member of the beaurocracy, I too spend time in these activities.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to install an Android APK with OBB data using ADB</title>
      <link>https://polina.io/blog/2016/12/10/how-to-install-android-apk/</link>
      <pubDate>Sun, 27 Jul 2014 22:02:12 +0000</pubDate>
      
      <guid>https://polina.io/blog/2016/12/10/how-to-install-android-apk/</guid>
      <description>&lt;p&gt;This serves as a guide for adding a build to an Android device that uses OBB. The most common use case is loading others&amp;rsquo; Android dev builds for the purposes of testing/QA. Unfortunately it&amp;rsquo;s less straight forward than I had hoped, so I&amp;rsquo;ve compiled a reference for myself.&lt;/p&gt;

&lt;p&gt;####Prerequisites&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Familiarity with the command line and &lt;a href=&#34;http://developer.android.com/tools/help/adb.html&#34;&gt;Android Debug Bridge&lt;/a&gt; (ADB)&lt;/li&gt;
&lt;li&gt;Android Device with &lt;a href=&#34;http://www.kingoapp.com/root-tutorials/how-to-enable-usb-debugging-mode-on-android.htm&#34;&gt;USB Debugging Mode&lt;/a&gt; enabled&lt;/li&gt;
&lt;li&gt;The APK and OBB files you wish to load (ex. test_build.apk, test_build_data.obb)&lt;/li&gt;
&lt;li&gt;The name of the OBB file. Here&amp;rsquo;s a sample file name: main.9502.com.company.app.obb&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;####Step-by-step guide&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Confirm that your device is connected:&lt;/p&gt;

&lt;p&gt;&lt;pre&gt;&lt;code&gt;
  $ adb devices
  List of devices attached
  TA93002YVA  device
  &lt;/pre&gt;&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Install your APK file. This may take a little while depending on the size.&lt;/p&gt;

&lt;p&gt;&lt;pre&gt;&lt;code&gt;
  $ adb install app_build.apk
  4460 KB/s (20396990 bytes in 4.465s)
      pkg: /data/local/tmp/app_build.apk
  Success
  &lt;/pre&gt;&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;At this point you should be able to load the build by clicking on its icon under all apps. It should fail to load the game and give you an error similar to the following:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://polina.io/img/articles/no_resources.png&#34; alt=&#34;&#34; style=&#34;width: 100%;max-height: 100%&#34;&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The resources are contained in the OBB directory for the app. If there isn&amp;rsquo;t a folder for the app, create one under Android &amp;gt; OBB. Let&amp;rsquo;s go into the shell and create our directory:&lt;/p&gt;

&lt;p&gt;&lt;pre&gt;&lt;code&gt;
  $ adb -d shell
  shell@falcon_umts:/ $ cd sdcard/Android/obb
  shell@falcon_umts:/sdcard/Android/obb $
  mkdir com.company.app
  shell@falcon_umts:/sdcard/Android/obb $ ls
  com.company.app
  shell@falcon_umts:/sdcard/Android/obb $ exit
  $
  &lt;/pre&gt;&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Exit the shell and move your OBB file over. Use this format: adb push /path/to/local/file /mnt/sdcard/path/to/file. This may also take awhile depending on the size.&lt;/p&gt;

&lt;p&gt;&lt;pre&gt;&lt;code&gt;
  $ adb push main.9502.com.company.app.obb
  /sdcard/Android/obb/com.company.app/
  4469 KB/s (206696500 bytes in 45.158s)
  &lt;/pre&gt;&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;If you put the data in the wrong place or named it incorrectly, you may see an error similar to this. Go back to adb shell or File Explorer in the device and confirm it&amp;rsquo;s in the right place. You can also check with the person sending it to you that you&amp;rsquo;ve named it correctly.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://polina.io/img/articles/not_have_purchased.png&#34; alt=&#34;&#34; style=&#34;width: 100%;max-height: 100%&#34;&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Select your app to confirm the resources have loaded. You should be good to go!&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://polina.io/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://polina.io/about/</guid>
      <description>

&lt;h3 id=&#34;about-me&#34;&gt;About me&lt;/h3&gt;

&lt;p&gt;Hi there! My name is Polina, and I&amp;rsquo;m a software engineer at &lt;a href=&#34;https://www.indiegogo.com&#34; target=&#34;_blank&#34;&gt;Indiegogo&lt;/a&gt;. I&amp;rsquo;m very passionate about building for the web&amp;ndash; software engineering is a means through which I can be proud of building services that empower those around me.&lt;/p&gt;

&lt;p&gt;I graduated from Wellesley College with a degree in &lt;a href=&#34;http://www.wellesley.edu/cs&#34; target=&#34;_blank&#34;&gt;Computer Science&lt;/a&gt; and currently reside in San Francisco. When I&amp;rsquo;m not coding, you can find me listening to podcasts, running, and learning about the world and people through stories.&lt;/p&gt;

&lt;h3 id=&#34;contact&#34;&gt;Contact&lt;/h3&gt;

&lt;p&gt;say hi! :) psoshnin@gmail.com&lt;/p&gt;

&lt;h3 id=&#34;offer&#34;&gt;#OFFER&lt;/h3&gt;

&lt;p&gt;I love meeting women in this industry and sharing experiences. I can offer what I&amp;rsquo;ve learned in the following areas:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Advice &amp;amp; Support to folks new to tech industry&lt;/li&gt;
&lt;li&gt;Working in the JavaScript ecosystem (frameworks, build tools, specifications, etc.)&lt;/li&gt;
&lt;li&gt;Getting started with open source (I&amp;rsquo;m involved with &lt;a href=&#34;http://www.writespeakcode.com/&#34;&gt;Write/Speak/Code&lt;/a&gt; Open Source Hours and I&amp;rsquo;m excited to be involved with &lt;a href=&#34;http://railsgirlssummerofcode.org/&#34;&gt;Rails Girls Summer of Code&lt;/a&gt; 2017 ❤️)&lt;/li&gt;
&lt;li&gt;Advice on coding bootcamps (I currently mentor at &lt;a href=&#34;https://hackbrightacademy.com/&#34;&gt;Hackbright&lt;/a&gt; and attended &lt;a href=&#34;http://www.hackreactor.com/&#34;&gt;Hack Reactor&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;ask&#34;&gt;#ASK&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;I would love to meet and learn from more women in infrastructure (systems, computer networking, production infrastructure, SRE, ops)&lt;/li&gt;
&lt;li&gt;Advice from folks on how to make your company interviewing/hiring process better&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>